{"version":3,"sources":["components/InputTodo.jsx","components/IncompleteTodos.jsx","components/CompleteTodos.jsx","App.jsx","index.js"],"names":["style","backgroundColor","width","height","padding","margin","borderRadius","InputTodo","props","todoText","onChange","onClick","disabled","placeholder","value","IncompleteTodos","todos","onClickComplete","onClickDelete","className","map","todo","index","CompleteTodos","onClickBack","App","useState","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","event","target","newTodos","length","color","newIncompleteTodos","splice","newCompleteTodos","ReactDom","render","document","getElementById"],"mappings":"mMAEMA,EAAQ,CACZC,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,OACRC,QAAS,MACTC,OAAQ,MACRC,aAAc,OAGHC,EAAY,SAACC,GACxB,IAAQC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SACrC,OACE,sBAAKZ,MAAOA,EAAZ,UACE,uBAAOY,SAAUA,EAAUC,YAAY,yBAAUC,MAAOL,EAAUC,SAAUA,IAC5E,wBAAQE,SAAUA,EAAUD,QAASA,EAArC,4BAGL,ECjBYI,EAAkB,SAACP,GAC9B,IAAQQ,EAA0CR,EAA1CQ,MAAOC,EAAmCT,EAAnCS,gBAAiBC,EAAkBV,EAAlBU,cAChC,OACE,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAb,0CAEA,6BACGH,EAAMI,KAAI,SAACC,EAAMC,GAChB,OACE,qBAAgBH,UAAU,WAA1B,UACE,mBAAGA,UAAU,OAAb,SAAqBE,IACrB,wBAAQV,QAAS,kBAAMM,EAAgBK,EAAtB,EAAjB,0BACA,wBAAQX,QAAS,kBAAMO,EAAcI,EAApB,EAAjB,4BAHOA,EAMZ,QAKR,ECpBYC,EAAgB,SAACf,GAC5B,IAAQQ,EAAuBR,EAAvBQ,MAAOQ,EAAgBhB,EAAhBgB,YACf,OACE,sBAAKL,UAAU,gBAAf,UACE,mBAAGA,UAAU,QAAb,oCAEA,6BACGH,EAAMI,KAAI,SAACC,EAAMC,GAChB,OACE,qBAAgBH,UAAU,WAA1B,UACE,mBAAGA,UAAU,OAAb,SAAqBE,IACrB,wBAAQV,QAAS,kBAAMa,EAAYF,EAAlB,EAAjB,4BAFOA,EAKZ,QAIR,ECbYG,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOjB,EAAP,KAAiBkB,EAAjB,KACA,EAA8CD,mBAAS,IAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KAEA,EAA0CH,mBAAS,IAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KAsCA,OACE,qCACE,cAAC,EAAD,CACEtB,SAAUA,EACVC,SAxCmB,SAACsB,GAAD,OAAWL,EAAYK,EAAMC,OAAOnB,MAApC,EAyCnBH,QAtCa,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAMyB,EAAQ,sBAAON,GAAP,CAAwBnB,IACtCoB,EAAmBK,GACnBP,EAAY,GAHe,CAI5B,EAkCKf,SAAUgB,EAAgBO,QAAU,IAErCP,EAAgBO,QAAU,GAAK,mBAAGnC,MAAO,CAAEoC,MAAO,OAAnB,yEAChC,cAAC,EAAD,CACEpB,MAAOY,EACPX,gBA9BkB,SAACK,GACvB,IAAMe,EAAkB,YAAOT,GAC/BS,EAAmBC,OAAOhB,EAAO,GAEjC,IAAMiB,EAAgB,sBAAOT,GAAP,CAAsBF,EAAgBN,KAC5DO,EAAmBQ,GACnBN,EAAiBQ,EAClB,EAwBKrB,cAtCgB,SAACI,GACrB,IAAMY,EAAQ,YAAON,GACrBM,EAASI,OAAOhB,EAAO,GACvBO,EAAmBK,EACpB,IAoCG,cAAC,EAAD,CACElB,MAAOc,EACPN,YAzBc,SAACF,GACnB,IAAMiB,EAAgB,YAAOT,GAC7BS,EAAiBD,OAAOhB,EAAO,GAE/B,IAAMe,EAAkB,sBAAOT,GAAP,CAAwBE,EAAcR,KAC9DS,EAAiBQ,GACjBV,EAAmBQ,EACpB,MAsBF,EChEDG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.18d3ddb7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst style = {\n  backgroundColor: '#c1ffff',\n  width: '400px',\n  height: '30px',\n  padding: '8px',\n  margin: '8px',\n  borderRadius: '8px'\n}\n\nexport const InputTodo = (props) => {\n  const { todoText, onChange, onClick, disabled } = props;\n  return (\n    <div style={style}>\n      <input disabled={disabled} placeholder=\"TODOを入力\" value={todoText} onChange={onChange} />\n      <button disabled={disabled} onClick={onClick}>追加</button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const IncompleteTodos = (props) => {\n  const { todos, onClickComplete, onClickDelete } = props;\n  return (\n    <div className=\"imcomplete-area\">\n      <p className=\"title\">未完了のTODO\n      </p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <li key={index} className=\"list-row\">\n              <p className=\"text\">{todo}</p>\n              <button onClick={() => onClickComplete(index)}>完了</button>\n              <button onClick={() => onClickDelete(index)}>削除</button>\n            </li>\n          );\n        })}\n      </ul>\n\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport const CompleteTodos = (props) => {\n  const { todos, onClickBack } = props;\n  return (\n    <div className=\"complete-area\">\n      <p className=\"title\">完了のTODO\n      </p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <li key={index} className=\"list-row\">\n              <p className=\"text\">{todo}</p>\n              <button onClick={() => onClickBack(index)}>戻す</button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  )\n}\n","\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from './components/InputTodo';\nimport { IncompleteTodos } from './components/IncompleteTodos';\nimport { CompleteTodos } from './components/CompleteTodos';\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState('');\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n\n  const [completeTodos, setCompleteTodos] = useState([]);\n\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  // 追加処理\n  const onClickAdd = () => {\n    if (todoText === \"\") return;\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  };\n  // 削除処理\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  };\n\n  // 完了処理\n  const onClickComplete = (index) => {\n    const newIncompleteTodos = [...incompleteTodos];\n    newIncompleteTodos.splice(index, 1);\n\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    setCompleteTodos(newCompleteTodos);\n  };\n\n  // 戻す処理\n  const onClickBack = (index) => {\n    const newCompleteTodos = [...completeTodos];\n    newCompleteTodos.splice(index, 1);\n\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\n    setCompleteTodos(newCompleteTodos);\n    setIncompleteTodos(newIncompleteTodos);\n  }\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n        disabled={incompleteTodos.length >= 5}\n      />\n      {incompleteTodos.length >= 5 && <p style={{ color: 'red' }}>登録できるtodoは5個まで</p>}\n      <IncompleteTodos\n        todos={incompleteTodos}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n      />\n      <CompleteTodos\n        todos={completeTodos}\n        onClickBack={onClickBack}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}